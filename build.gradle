apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

version = '1.0'

def wowzaLibsPath = "${System.env['ProgramFiles(x86)']}/Wowza Media Systems/Wowza Streaming Engine 4.5.0/lib"
// def wowzaLibsPath = "/usr/local/WowzaStreamingEngine-4.4.1/lib"
def localWowzaPath = "${System.env['ProgramFiles(x86)']}/Wowza Media Systems/Wowza Streaming Engine 4.5.0"
// def localWowzaPath = "/usr/local/WowzaStreamingEngine-4.4.1"
def serviceName = 'WowzaStreamingEngine450'
def applicationName = 'testlive'

jar {
    baseName = 'readyreplay-wowza'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-client
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.23.1'
    
    // https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-multipart
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.23.1'
    
    
    compile fileTree(dir: wowzaLibsPath, include: 'wms*.jar', exclude: '*wms-restlet*')
    testCompile("junit:junit")
}

task printWowzaLibraryPath << {
    println("The Wowza library path is: $wowzaLibsPath")
}

task packageJars(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Wowza-ReadyReplay Integration',
                   'Implementation-Version': version,
                   'Main-Class': 'com.readyreplay.wowzareadyreplay.Application'
    }
    baseName = project.name + '-all'
    // from { configurations.pack.collect { it.directory ? it : zipTree(it) } }
    // from { configurations.compile.collect { it.directory ? it : zipTree(it) } }
    //with jar
}

task deploy(dependsOn: build) {
    copy {
        from jar.archivePath.absolutePath
        into "$localWowzaPath/lib"
    }
    copy {
        from "$project.projectDir/Application.xml"
        into "$localWowzaPath/conf/$applicationName"
    }
    mkdir("$localWowzaPath/applications/$applicationName")
}

task stopWowza << {
    println 'shutting down wowza'
    exec {
        commandLine = ['cmd', '/c', 'net', 'stop', serviceName] // this only works on windows
        ignoreExitValue = true
    }
}

task startWowza << {
    println 'starting wowza'
    exec {
        commandLine = ['cmd', '/c', 'net', 'start', serviceName] // this only works on windows
        ignoreExitValue = true
    }
}

tasks.build.dependsOn packageJars

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
